#!/bin/sh
# chkconfig: 345 99 10
# description: Oracle auto start-stop script.
#
# Set ORA_OWNER to the user id of the owner of the
# Oracle database software.
#
# Place this script in
#   /etc/init.d/
#
# Set the file privileges to 750:
#   chmod 750 /etc/init.d/dbora
#
# Associate the dbora service with the appropriate
# run levels and set it to auto-start using the
# following command:
#   chkconfig --add dbora
#
# Test services with:
#   service dbora start
#   service dbora stop


ORACLE_OWNER=oracle
SCRIPTS_HOME=/home/oracle/scripts

export TMP=/tmp
export TMPDIR=$TMP
export PATH=/usr/sbin:/<path>/bin:$PATH
export ORACLE_HOSTNAME=i<hostname e.x:rbdb.example.net>
export ORACLE_HOME=/<path>/Oracle/product/11.2.0/dbhome_1
export ORACLE_BASE=/<path>/oracle/
export ORACLE_UNQNAME=orcl
export ORACLE_SID=orcl

case "$1" in
    'start')
        # Start the Oracle databases:
        # The following command assumes that the oracle login
        # will not prompt the user for any values
        # Remove "&" if you don't want startup as a background process.
        echo "Oracle DB is going to start in a few min...."
        su $ORACLE_OWNER -c "$SCRIPTS_HOME/db_start.sh >> $SCRIPTS_HOME/db_start.log 2>&1 &"
        echo "DB Console is going to start...."
        su $ORACLE_OWNER -c "$SCRIPTS_HOME/em_start.sh &"
        echo "All successfully started"

        touch /var/lock/subsys/dbora
        ;;
    'stop')
        # Stop the Oracle databases:
        # The following command assumes that the oracle login
        # will not prompt the user for any values
        echo "DBConsole is going to stop in a few min...."
        su $ORACLE_OWNER -c "$SCRIPTS_HOME/em_stop.sh &"
        echo "Oracle DB is going to stop...."
        su $ORACLE_OWNER -c "$SCRIPTS_HOME/db_stop.sh >> $SCRIPTS_HOME/db_stop.log 2>&1"
        echo "All succesfully stoped"
        rm -f /var/lock/subsys/dbora
        ;;
esac

